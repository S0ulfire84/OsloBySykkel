{"version":3,"sources":["components/stations.js","App.js","index.js"],"names":["Stations","state","stations","stationsFiltered","fetchFromServer","BASE_URL","fetch","then","resInfo","json","dataInfo","resStatus","dataStatus","stationsData","data","stationsInfo","mix","map","item","i","Object","assign","setState","catch","console","log","updateListButtonClicked","updateButton","current","disabled","searchBar","value","setTimeout","handleSearchFilter","filterString","length","filter","station","name","toLowerCase","includes","this","React","createRef","className","ref","onClick","placeholder","onChange","e","target","type","id","key","station_id","num_bikes_available","num_docks_available","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yMA8FeA,E,4MAzFbC,MAAQ,CAACC,SAAS,GAAIC,iBAAiB,I,EAEvCC,gBAAkB,WAEhB,IAAMC,EAAW,iDAEjBC,MAAMD,EAAS,4BACdE,MAAK,SAAAC,GAAO,OAAIA,EAAQC,UACxBF,MAAK,SAACG,GAGLJ,MAAMD,EAAS,uBACdE,MAAK,SAAAI,GAAS,OAAIA,EAAUF,UAC5BF,MAAK,SAACK,GACL,IAAIC,EAAeH,EAASI,KAAKZ,SAC7Ba,EAAeH,EAAWE,KAAKZ,SAE/Bc,EAAMH,EAAaI,KAAI,SAACC,EAAMC,GAAP,OAAaC,OAAOC,OAAO,GAAIH,EAAMH,EAAaI,OAE7E,EAAKG,SAAS,CAAEpB,SAAUc,EAAKb,iBAAiBa,OAEjDO,MAAMC,QAAQC,QAIhBF,MAAMC,QAAQC,M,EAGjBC,wBAA0B,WACxB,EAAKtB,kBACL,EAAKuB,aAAaC,QAAQC,UAAW,EACrC,EAAKC,UAAUF,QAAQG,MAAQ,GAC/BC,YAAY,WACV,EAAKL,aAAaC,QAAQC,UAAW,IACpC,M,EAGLI,mBAAqB,SAAAC,GAEnB,IAAI/B,EAAmB,EAAKF,MAAMC,SAE9BgC,EAAaC,OAAS,IACxBhC,EAAmB,EAAKF,MAAMC,SAASkC,QAAO,SAAAC,GAAO,OAAIA,EAAQC,KAAKC,cAAcC,SAASN,EAAaK,mBAG5G,EAAKjB,SAAS,CAACpB,SAAS,EAAKD,MAAMC,SAAUC,iBAAiBA,K,kEAM9DsC,KAAKd,aAAee,IAAMC,YAC1BF,KAAKX,UAAYY,IAAMC,YACvBF,KAAKrC,oB,+BAGG,IAAD,OAEP,OACE,yBAAKwC,UAAU,aACb,gCAAQ,4DACR,2BAAG,4BAAQA,UAAU,kBAAkBC,IAAKJ,KAAKd,aAAcmB,QAASL,KAAKf,yBAA1E,mBACH,2BAAG,2BAAOkB,UAAU,oBAAoBC,IAAKJ,KAAKX,UAAWiB,YAAY,SAAMC,SAAU,SAAAC,GAAC,OAAE,EAAKhB,mBAAmBgB,EAAEC,OAAOnB,QAAQoB,KAAK,SAASC,GAAG,SAASd,KAAK,YAEpK,2BAAOM,UAAU,sCACf,+BAEAH,KAAKxC,MAAME,iBAAiBc,KAE1B,SAACoB,GAAD,OAEE,wBAAIgB,IAAKhB,EAAQiB,YACf,wBAAIV,UAAU,aACZ,wBAAIA,UAAU,cAAcP,EAAQC,MACpC,wBAAIM,UAAU,iCAAd,kBAA8DP,EAAQkB,qBACtE,wBAAIX,UAAU,iCAAd,2BAAoEP,EAAQmB,iC,GA9EvEd,IAAMe,WCYdC,G,6KAPX,OACE,kBAAC,EAAD,U,GAJYD,cCAlBE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.6212d174.chunk.js","sourcesContent":["import React from 'react'\n\nclass Stations extends React.Component {\n  \n  // Custom functions\n  state = {stations:[], stationsFiltered:[]}\n\n  fetchFromServer = () => {\n\n    const BASE_URL = 'https://gbfs.urbansharing.com/oslobysykkel.no/'\n\n    fetch(BASE_URL+'station_information.json')\n    .then(resInfo => resInfo.json())\n    .then((dataInfo) => {\n      \n  \n      fetch(BASE_URL+'station_status.json')\n      .then(resStatus => resStatus.json())\n      .then((dataStatus)=> {\n        let stationsData = dataInfo.data.stations\n        let stationsInfo = dataStatus.data.stations\n  \n        let mix = stationsData.map((item, i) => Object.assign({}, item, stationsInfo[i]));\n        \n        this.setState({ stations: mix, stationsFiltered:mix })\n      })\n      .catch(console.log)\n  \n      \n    })\n    .catch(console.log)\n  }\n\n  updateListButtonClicked = () => {\n    this.fetchFromServer()\n    this.updateButton.current.disabled = true\n    this.searchBar.current.value = \"\"\n    setTimeout( () => {\n      this.updateButton.current.disabled = false\n    }, 1000);\n  }\n\n  handleSearchFilter = filterString => {\n\n    let stationsFiltered = this.state.stations\n\n    if (filterString.length > 0) {\n      stationsFiltered = this.state.stations.filter(station => station.name.toLowerCase().includes(filterString.toLowerCase()))\n    }\n\n    this.setState({stations:this.state.stations, stationsFiltered:stationsFiltered})\n    \n  }\n\n  // React functions\n  componentDidMount() {\n    this.updateButton = React.createRef()\n    this.searchBar = React.createRef()\n    this.fetchFromServer()\n  }\n\n  render() {\n\n    return (\n      <div className=\"container\" >\n        <center><h1>Oslo Bysykkel Stasjonsliste</h1></center>\n        <p><button className=\"btn btn-primary\" ref={this.updateButton} onClick={this.updateListButtonClicked}>Oppdater liste</button></p>\n        <p><input className=\"form-control mb-2\" ref={this.searchBar} placeholder=\"Søk\" onChange={e=>this.handleSearchFilter(e.target.value)} type=\"search\" id=\"search\" name=\"Søk\" /></p>\n        \n        <table className=\"table table-bordered table-striped\">\n          <tbody>\n        {\n          this.state.stationsFiltered.map\n          (\n            (station) => \n            (\n              <tr key={station.station_id} >\n                <td className=\"card-body\">\n                  <h5 className=\"card-title\">{station.name}</h5>\n                  <h6 className=\"card-subtitle mb-2 text-muted\">Ledige sykler: {station.num_bikes_available}</h6>\n                  <h6 className=\"card-subtitle mb-2 text-muted\">Tilgjengelige låser: {station.num_docks_available}</h6>\n                </td>\n              </tr>\n            )\n          )\n        }\n        </tbody>\n        </table>\n      </div>\n    )\n  }\n\n}\n\nexport default Stations","import React, {Component} from 'react';\nimport Stations from './components/stations'\nimport './bootstrap.css';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Stations />\n    )\n  }\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}